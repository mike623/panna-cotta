name: Deno Build and Release

on:
  push:
    branches:
      - 'release/*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin]
        exclude:
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: x86_64-unknown-linux-gnu

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v2.x

    - name: Compile Deno application
      run: deno compile -A --target ${{ matrix.target }} --include packages/frontend --output stream-backend packages/backend/server.ts

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: stream-backend-${{ matrix.target }}
        path: stream-backend

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/stream-backend-x86_64-unknown-linux-gnu/stream-backend
        asset_name: stream-backend-linux
        asset_content_type: application/octet-stream

    

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/stream-backend-x86_64-apple-darwin/stream-backend
        asset_name: stream-backend-macos
        asset_content_type: application/octet-stream
